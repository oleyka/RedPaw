---

- name: install lets encrypt tools
  become: yes 
  pkgng:
    name: py27-certbot
    state: present

- name: is there nginx service running
  become: yes 
  command: >
    /usr/sbin/service nginx onestatus
  register: nginx_service_active
  ignore_errors: True

- name: stop nginx
  become: yes 
  service:
    name: nginx
    state: stopped
  when: nginx_service_active.rc == 0

- name: grab the git email
  local_action: command git config user.email
  register: git_email

- name: add letsencrypt certs
  become: yes 
  command: >
    /usr/local/bin/letsencrypt certonly --standalone
    --standalone-supported-challenges http-01
    -d {{ ansible_fqdn }} -t -m {{ git_email.stdout }}
    --agree-tos --duplicate
    --server https://acme-v01.api.letsencrypt.org/directory
    creates=/usr/local/etc/letsencrypt/live/{{ ansible_fqdn }}/cert.pem

- name: symlink certs to /etc/ssl
  become: yes
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - src: /usr/local/etc/letsencrypt/live/{{ ansible_fqdn }}/fullchain.pem
      dest: /etc/ssl/{{ ansible_fqdn }}-fullchain.crt
    - src: /usr/local/etc/letsencrypt/live/{{ ansible_fqdn }}/chain.pem
      dest: /etc/ssl/{{ ansible_fqdn }}-chain.crt
    - src: /usr/local/etc/letsencrypt/live/{{ ansible_fqdn }}/cert.pem
      dest: /etc/ssl/{{ ansible_fqdn }}.crt
    - src: /usr/local/etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem
      dest: /etc/ssl/{{ ansible_fqdn }}.key

- name: restart nginx
  become: yes
  service:
    name: nginx
    state: started
  when: nginx_service_active.rc == 0

# TODO include an auto-renew script
